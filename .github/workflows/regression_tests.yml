name: Regression tests

on:
  push:
    branches:
      - master
      - dev
  pull_request:
    branches:
      - master
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  regression_tests:

    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ github.token }}
    strategy:
      matrix:
        python-version: ['3.10']
        group: [1, 2, 3, 4, 5, 6]

    steps:
      - uses: actions/checkout@v4

      - name: Filter changes
        id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            has_changes:
              - 'desc/**'
              - 'tests/**'
              - 'requirements.txt'
              - 'devtools/dev-requirements.txt'
              - 'setup.cfg'
              - '.github/workflows/regression_tests.yml'

      - name: Check for relevant changes
        id: check_changes
        run: echo "has_changes=${{ !contains(github.event.pull_request.labels.*.name, 'only-docs-comments') && steps.changes.outputs.has_changes }}" >> $GITHUB_ENV

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Check full Python version
        run: |
          python --version
          python_version=$(python --version 2>&1 | cut -d' ' -f2)
          echo "Python version: $python_version"
          echo "version=$python_version" >> $GITHUB_ENV

      - name: Restore Python environment cache
        if: env.has_changes == 'true'
        id: restore-env
        uses: actions/cache/restore@v4
        with:
          path: .venv-${{ env.version }}
          key: ${{ runner.os }}-venv-${{ env.version }}-${{ hashFiles('devtools/dev-requirements.txt', 'requirements.txt') }}

      - name: Set up virtual environment if not restored from cache
        if: steps.restore-env.outputs.cache-hit != 'true' && env.has_changes == 'true'
        run: |
          gh cache list
          python -m venv .venv-${{ env.version }}
          source .venv-${{ env.version }}/bin/activate
          python -m pip install --upgrade pip
          pip install -r devtools/dev-requirements.txt
          pip install matplotlib==3.9.2

      - name: Set Swap Space
        if: env.has_changes == 'true'
        uses: pierotofy/set-swap-space@master
        with:
          swap-size-gb: 4

      - name: Action Details
        if: env.has_changes == 'true'
        run: |
          source .venv-${{ env.version }}/bin/activate
          which python
          python --version
          pwd
          lscpu
          pip list

      - name: Test with pytest
        if: env.has_changes == 'true'
        run: |
          source .venv-${{ env.version }}/bin/activate
          python -m pytest -v -m regression\
            --durations=0 \
            --cov-report xml:cov.xml \
            --cov-config=setup.cfg \
            --cov=desc/ \
            --mpl \
            --mpl-results-path=mpl_results.html \
            --mpl-generate-summary=html \
            --splits 6 \
            --group ${{ matrix.group }} \
            --splitting-algorithm least_duration \
            --db ./prof.db

      - name: save coverage file and plot comparison results
        if: always() && env.has_changes == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: regression_test_artifact-${{ matrix.python-version }}-${{ matrix.group }}
          path: |
            ./cov.xml
            ./mpl_results.html
            ./prof.db

      - name: Upload coverage
        if: env.has_changes == 'true'
        id : codecov
        uses: codecov/codecov-action@v5
        with:
          name: codecov-umbrella
          files: ./cov.xml
          fail_ci_if_error: true
          verbose: true
