name: Regression tests

on: 
  push:
    branches:
      - master
      - dev
  pull_request:
    branches:
      - master
    paths-ignore:
      - 'docs/**'
      - 'devtools/**'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  regression_tests:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9']
        group: [1, 2, 3, 4]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r devtools/dev-requirements.txt
          pip install matplotlib==3.5.0
      - name: Test with pytest
        run: |
          pwd
          lscpu
          python -m pytest -m regression --durations=0 --cov-report xml:cov.xml --cov-config=setup.cfg --cov=desc/ --mpl --mpl-results-path=mpl_results.html --mpl-generate-summary=html --splits 4 --group ${{ matrix.group }} --splitting-algorithm least_duration --db ./prof.db
      - name: save coverage file and plot comparison results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: regression_test_artifact-${{ matrix.python-version }}-${{ matrix.group }}
          path: |
            ./cov.xml
            ./mpl_results.html
            ./prof.db	    
      - name: Upload coverage
        continue-on-error: true
        id : codecov1
        uses: codecov/codecov-action@v2
        with:
          name: codecov-umbrella # optional
          files: ./cov.xml
          fail_ci_if_error: true # optional (default = false)
          verbose: true # optional (default = false)
      - name: Upload coverage2
        id : codecov2
        continue-on-error: true
        if: steps.codecov1.outcome=='failure'         # check the step outcome, retry 1st time
        uses: codecov/codecov-action@v2
        with:
          name: codecov-umbrella # optional
          files: ./cov.xml
          fail_ci_if_error: true # optional (default = false)
          verbose: true # optional (default = false)
      - name: Upload coverage3
        id : codecov3
        continue-on-error: true
        if: steps.codecov2.outcome=='failure'         # check the step outcome, retry 2nd time
        uses: codecov/codecov-action@v2
        with:
          name: codecov-umbrella # optional
          files: ./cov.xml
          fail_ci_if_error: true # optional (default = false)
          verbose: true # optional (default = false)
      - name: Upload coverage4
        id : codecov4
        continue-on-error: true
        if: steps.codecov3.outcome=='failure'         # check the step outcome, retry 3rd time
        uses: codecov/codecov-action@v2
        with:
          name: codecov-umbrella # optional
          files: ./cov.xml
          fail_ci_if_error: true # optional (default = false)
          verbose: true # optional (default = false)
      - name: Upload coverage5
        id : codecov5
        continue-on-error: true
        if: steps.codecov4.outcome=='failure'         # check the step outcome, retry 4th time
        uses: codecov/codecov-action@v2
        with:
          name: codecov-umbrella # optional
          files: ./cov.xml
          fail_ci_if_error: true # optional (default = false)
          verbose: true # optional (default = false)
      - name: set the status                          # set the workflow status if command failed
        if: always()
        run: |
          if ${{ steps.codecov1.outcome=='success' || steps.codecov2.outcome=='success' || steps.codecov3.outcome=='success' || steps.codecov4.outcome=='success' || steps.codecov5.outcome=='success' }}; then
             echo fine
          else
             exit 1
          fi